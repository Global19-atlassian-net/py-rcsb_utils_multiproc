# File: azure-template-tox-job.yml
# Date: 8-Jul-2019 jdw split out from original pipeline

parameters:
  tox: ""
  python: ""
  os: "linux"

jobs:
- job: ${{ format('build_test_{0}_{1}', parameters.tox, parameters.os) }}
  pool:
    ${{ if eq(parameters.os, 'macos') }}:
      vmImage: 'macOS-10.14'
    ${{ if eq(parameters.os, 'linux') }}:
      vmImage: 'ubuntu-latest'

  steps:
    #
    # ensure the required Python versions are available
    - task: UsePythonVersion@0
      inputs:
        versionSpec: ${{ parameters.python }}
        addToPath: true
      displayName: setup python
    #
    - ${{ if startsWith(parameters.os, 'macos') }}:
      - bash: |
          set -e
          ls -la /Applications/Xcode*
          sudo xcode-select --switch /Applications/Xcode_10.2.app/Contents/Developer
          which g++
          c++ --version
        displayName: "setup Xcode"
      #
      - script: which brew
        displayName: 'Check package manager'
      - script: brew install flex
        displayName: 'Install flex'
      - script: which flex
        displayName: 'Check flex'
      - script: brew install bison
        displayName: 'Install bison'
      - script: which bison
        displayName: 'Check bison'
    # ----------------------------------------------
    - ${{ if startsWith(parameters.os, 'linux') }}:
        - script: which apt
          displayName: 'Installing OS dependencies'
        - script: apt-cache policy | grep http | awk '{print $2 $3}' | sort -u
          displayName: 'Checking for repos'
        #
        - script: sudo apt-get install flex
          displayName: 'Install flex'
        - script: sudo apt-get install bison
          displayName: 'Install bison'
    #
    - script: "python -c \"import sys; print(sys.version); print(sys.executable)\""
      displayName: show python information
    #
    - script: python -m pip install --upgrade pip tox
      displayName: 'Install tools'
      #
    - script: pip install -r requirements.txt
      displayName: 'Install dependencies'
    #
    - ${{ if startsWith(parameters.tox, 'py') }}:
      - script: ${{ format('python -m tox -e {0}', parameters.tox) }}
        displayName: 'Run Tox'
    - ${{ if not(startsWith(parameters.tox, 'py')) }}:
      - script: ${{ format('python -m tox -e {0}-{1}', parameters.tox, parameters.os) }}
        displayName: 'Run Tox'
    #
    #  Build artifacts if this is a python target
    #
    - ${{ if startsWith(parameters.tox, 'py') }}:
      - script: pip install --upgrade pip twine setuptools wheel
        displayName: "Acquire build tools"
      - script: python setup.py  sdist --dist-dir "$(System.DefaultWorkingDirectory)/dist"
        displayName: "Build source dist"
      - script: python setup.py  bdist_wheel --dist-dir "$(System.DefaultWorkingDirectory)/dist"
        displayName: "Build wheel"
      #
      # Check the install artifacts
      - script: ls -lR "$(System.DefaultWorkingDirectory)/dist"
        displayName: "Listing of installed software"
      #
      - publish: $(System.DefaultWorkingDirectory)/dist
        artifact: ${{ format('sw_{0}_{1}', parameters.tox, parameters.os) }}
